name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          
      - name: Check formatting with Black
        run: black --check .
        
      - name: Check imports with isort
        run: isort --check-only --diff .
        
      - name: Lint with flake8
        run: flake8 .

  test:
    runs-on: ubuntu-latest
    needs: quality
    
    env:
      API_KEY: ${{ secrets.API_KEY }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      TOKEN_URL: ${{ secrets.TOKEN_URL }}
      BASE_URL: ${{ secrets.BASE_URL }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Run tests with coverage
        run: pytest --cov=./ --cov-report=xml
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true